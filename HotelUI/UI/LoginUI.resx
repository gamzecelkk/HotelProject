<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LAd4mUM0Fi6pudBf/bf//gADAP/Z
</value>
  </data>
</root>